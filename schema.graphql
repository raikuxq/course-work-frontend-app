# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}
# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
    """JWT access token"""
    accessToken: JWT!

    """JWT refresh token"""
    refreshToken: JWT!
    user: User!
}

input ChangePasswordInput {
    newPassword: String!
    oldPassword: String!
}

type Channel {
    author: User!
    categories: [ChannelCategory!]!

    """Identifies the date and time when the object was created."""
    createdAt: DateTime!
    description: String!
    id: ID!
    inviteLink: String!
    members: [User!]!
    title: String!

    """Identifies the date and time when the object was last updated."""
    updatedAt: DateTime!
}

type ChannelCategory {
    channel: Channel!

    """Identifies the date and time when the object was created."""
    createdAt: DateTime!
    id: ID!
    title: String!
    trackers: [Tracker!]!

    """Identifies the date and time when the object was last updated."""
    updatedAt: DateTime!
}

input ChannelCategoryCreateInput {
    channelId: String!
    title: String!
}

input ChannelCategoryUpdateInput {
    title: String!
}

input ChannelCreateInput {
    description: String!
    title: String!
}

input ChannelJoinToInput {
    inviteLink: String!
}

input ChannelLeaveInput {
    channelId: String!
}

input ChannelUpdateInput {
    description: String!
    title: String!
}

type Comment {
    author: TrackerMember!
    content: String!

    """Identifies the date and time when the object was created."""
    createdAt: DateTime!
    id: ID!
    report: IssueReport!

    """Identifies the date and time when the object was last updated."""
    updatedAt: DateTime!
}

input CommentCreateInput {
    content: String!
    issueReportId: String!
}

input CommentUpdateInput {
    content: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type IssueReport {
    author: TrackerMember!
    comments: [Comment!]!
    createdAt: DateTime!
    description: String!
    id: String!
    priority: IssueReportPriority!
    responsiblePerson: TrackerMember!
    status: IssueReportStatus!
    title: String!
    tracker: Tracker!
    type: IssueReportType!
    updatedAt: DateTime!
}

input IssueReportCreateInput {
    description: String!
    priority: IssueReportPriority!
    responsiblePersonId: String!
    status: IssueReportStatus!
    title: String!
    trackerId: String!
    type: IssueReportType!
}

"""Issue report priority"""
enum IssueReportPriority {
    CRITICAL
    HIGH
    LOW
    NORMAL
}

"""Issue report status"""
enum IssueReportStatus {
    CLOSED
    DISCUSSION
    FULFILMENT
    READY
    TO_APPROVE
}

"""Issue report type"""
enum IssueReportType {
    FUNCTIONALITY
    REPORTING
    UI
    VULNERABILITY
}

input IssueReportUpdateInput {
    description: String
    priority: IssueReportPriority
    responsiblePersonId: String
    status: IssueReportStatus
    title: String
    type: IssueReportType
}

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWT

input LoginInput {
    email: String!
    password: String!
}

type Mutation {
    authLogin(data: LoginInput!): Auth!
    authRefreshToken(token: JWT!): Token!
    authSignup(data: SignupInput!): Auth!
    channelCategoryCreate(data: ChannelCategoryCreateInput!): ChannelCategory!
    channelCategoryDelete(id: String!): ID!
    channelCategoryUpdate(data: ChannelCategoryUpdateInput!, id: String!): ChannelCategory!
    channelCreate(data: ChannelCreateInput!): Channel!
    channelDelete(id: String!): ID!
    channelJoin(data: ChannelJoinToInput!): Channel!
    channelLeave(data: ChannelLeaveInput!): ID!
    channelUpdate(data: ChannelUpdateInput!, id: String!): Channel!
    commentCreate(data: CommentCreateInput!): Comment!
    commentDelete(id: String!): ID!
    commentUpdate(data: CommentUpdateInput!, id: String!): Comment!
    issueReportCreate(data: IssueReportCreateInput!): IssueReport!
    issueReportDelete(id: String!): ID!
    issueReportUpdate(data: IssueReportUpdateInput!, id: String!): IssueReport!
    trackerAddMember(data: TrackerAddMemberInput!): Tracker!
    trackerCreate(data: TrackerCreateInput!): Tracker!
    trackerDelete(id: String!): ID!
    trackerRemoveMember(data: TrackerRemoveMemberInput!): Tracker!
    trackerUpdate(data: TrackerUpdateInput!, id: String!): Tracker!
    trackerUpdateMemberRole(data: TrackerAddMemberInput!): Tracker!
    userChangePassword(data: ChangePasswordInput!): User!
    userUpdate(data: UpdateUserInput!): User!
}

type Query {
    channel(id: String!): Channel!
    comment(id: String!): Comment!
    issueReport(id: String!): IssueReport!
    tracker(id: String!): Tracker!
    userChannelsMemberOf: [UserOnChannel!]!
    userChannelsOwn: [Channel!]!
    userCurrent: User!
}

"""User role"""
enum Role {
    ADMIN
    USER
}

input SignupInput {
    email: String!
    firstname: String
    lastname: String
    password: String!
}

type Token {
    """JWT access token"""
    accessToken: JWT!

    """JWT refresh token"""
    refreshToken: JWT!
}

type Tracker {
    category: ChannelCategory!
    channel: Channel!

    """Identifies the date and time when the object was created."""
    createdAt: DateTime!
    description: String!
    id: ID!
    members: [TrackerMember!]!
    reports: [IssueReport!]!
    title: String!

    """Identifies the date and time when the object was last updated."""
    updatedAt: DateTime!
}

input TrackerAddMemberInput {
    role: TrackerMemberRole!
    trackerId: String!
    userId: String!
}

input TrackerCreateInput {
    channelCategoryId: String
    channelId: String!
    description: String
    title: String!
}

type TrackerMember {
    """Identifies the date and time when the object was created."""
    createdAt: DateTime!
    id: ID!
    role: TrackerMemberRole!

    """Identifies the date and time when the object was last updated."""
    updatedAt: DateTime!
    user: User!
}

"""Tracker member role"""
enum TrackerMemberRole {
    DEV
    GUEST
    QA
}

input TrackerRemoveMemberInput {
    trackerId: String!
    userId: String!
}

input TrackerUpdateInput {
    channelCategoryId: String
    description: String
    title: String
}

input UpdateUserInput {
    firstname: String
    lastname: String
}

type User {
    """Identifies the date and time when the object was created."""
    createdAt: DateTime!
    email: String!
    firstname: String
    id: ID!
    lastname: String
    role: Role!

    """Identifies the date and time when the object was last updated."""
    updatedAt: DateTime!
}

type UserOnChannel {
    channel: Channel!

    """Identifies the date and time when the object was created."""
    createdAt: DateTime!
    id: ID!

    """Identifies the date and time when the object was last updated."""
    updatedAt: DateTime!
    user: User!
}
